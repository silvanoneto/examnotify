{
  "_args": [
    [
      {
        "raw": "vary@https://registry.npmjs.org/vary/-/vary-1.0.0.tgz",
        "scope": null,
        "escapedName": "vary",
        "name": "vary",
        "rawSpec": "https://registry.npmjs.org/vary/-/vary-1.0.0.tgz",
        "spec": "https://registry.npmjs.org/vary/-/vary-1.0.0.tgz",
        "type": "remote"
      },
      "/home/silvnto/Documents/javascript-examples/examnotify/node_modules/quarry-dns"
    ]
  ],
  "_from": "https://registry.npmjs.org/vary/-/vary-1.0.0.tgz",
  "_id": "vary@1.0.0",
  "_inCache": true,
  "_location": "/quarry-dns/express/vary",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vary@https://registry.npmjs.org/vary/-/vary-1.0.0.tgz",
    "scope": null,
    "escapedName": "vary",
    "name": "vary",
    "rawSpec": "https://registry.npmjs.org/vary/-/vary-1.0.0.tgz",
    "spec": "https://registry.npmjs.org/vary/-/vary-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/quarry-dns/express"
  ],
  "_resolved": "https://registry.npmjs.org/vary/-/vary-1.0.0.tgz",
  "_shasum": "c5e76cec20d3820d8f2a96e7bee38731c34da1e7",
  "_shrinkwrap": null,
  "_spec": "vary@https://registry.npmjs.org/vary/-/vary-1.0.0.tgz",
  "_where": "/home/silvnto/Documents/javascript-examples/examnotify/node_modules/quarry-dns",
  "author": {
    "name": "Douglas Christopher Wilson",
    "email": "doug@somethingdoug.com"
  },
  "bugs": {
    "url": "https://github.com/jshttp/vary/issues"
  },
  "dependencies": {},
  "description": "Manipulate the HTTP Vary header",
  "devDependencies": {
    "istanbul": "0.3.0",
    "mocha": "~1.21.4",
    "should": "~4.0.4",
    "supertest": "~0.13.0"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "https://github.com/jshttp/vary#readme",
  "keywords": [
    "http",
    "res",
    "vary"
  ],
  "license": "MIT",
  "name": "vary",
  "optionalDependencies": {},
  "readme": "# vary\n\n[![NPM Version](http://img.shields.io/npm/v/vary.svg?style=flat)](https://www.npmjs.org/package/vary)\n[![Node.js Version](http://img.shields.io/badge/node.js->=_0.8-blue.svg?style=flat)](http://nodejs.org/download/)\n[![Build Status](http://img.shields.io/travis/jshttp/vary.svg?style=flat)](https://travis-ci.org/jshttp/vary)\n[![Coverage Status](https://img.shields.io/coveralls/jshttp/vary.svg?style=flat)](https://coveralls.io/r/jshttp/vary)\n[![Gittip](http://img.shields.io/gittip/dougwilson.svg?style=flat)](https://www.gittip.com/dougwilson/)\n\nManipulate the HTTP Vary header\n\n## Install\n\n```sh\n$ npm install vary\n```\n\n## API\n\n```js\nvar vary = require('vary')\n```\n\n### vary(res, field)\n\nAdds the given header `field` to the `Vary` response header of `res`.\nThis can be a string of a single field, a string of a valid `Vary`\nheader, or an array of multiple fields.\n\nThis will append the header if not already listed, otherwise leaves\nit listed in the current location.\n\n```js\n// Append \"Origin\" to the Vary header of the response\nvary(res, 'Origin')\n```\n\n### vary.append(header, field)\n\nAdds the given header `field` to the `Vary` response header string `header`.\nThis can be a string of a single field, a string of a valid `Vary` header,\nor an array of multiple fields.\n\nThis will append the header if not already listed, otherwise leaves\nit listed in the current location. The new header string is returned.\n\n```js\n// Get header string appending \"Origin\" to \"Accept, User-Agent\"\nvary.append('Accept, User-Agent', 'Origin')\n```\n\n## Testing\n\n```sh\n$ npm test\n```\n\n## License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jshttp/vary.git"
  },
  "scripts": {
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/"
  },
  "version": "1.0.0"
}
